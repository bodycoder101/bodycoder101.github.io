<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>茅草屋</title>
  <subtitle>Zero</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://bodycoder101.github.io/"/>
  <updated>2017-06-13T12:22:43.970Z</updated>
  <id>http://bodycoder101.github.io/</id>
  
  <author>
    <name>Bodycoder</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>动态规划之最长公共子序列（longest common subsequence）问题的求解</title>
    <link href="http://bodycoder101.github.io/2017/04/30/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E4%B9%8B%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97%EF%BC%88longest%20common%20subsequence%EF%BC%89%E9%97%AE%E9%A2%98%E7%9A%84%E6%B1%82%E8%A7%A3/"/>
    <id>http://bodycoder101.github.io/2017/04/30/动态规划之最长公共子序列（longest common subsequence）问题的求解/</id>
    <published>2017-04-30T08:57:23.000Z</published>
    <updated>2017-06-13T12:22:43.970Z</updated>
    
    <content type="html">&lt;p&gt;从 二月中旬到四月底 这段时间一直忙于找实习，做准备，刷题，牛客上刷了蛮多算法题，遇到过比较多用动态规划解的题，现在实习的事情基本上也已经定下来了，手上也收到几个还满意的offer，一直想找一个时间去总结下此类题目的解法，思路总是有点模糊，容易忘记，现乘着有时间正好总结一下，也方便后面查阅。动态规划最经典的题目莫过于求两个字符串的最长公共子序列（LCS）问题了，我就以这个问题为例子，总结下动态规划的特点及适用场景。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h1&gt;&lt;p&gt;给定两个字符串（母串）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ABCBDAB&lt;/li&gt;
&lt;li&gt;BDCABA&lt;br&gt;所谓的公共子序列（可以不连续出现）指的是在两个母串都出现过且顺序和母串保持一致，如： &lt;strong&gt;AB&lt;/strong&gt;CBD &lt;strong&gt;A&lt;/strong&gt;B 与 BDC&lt;strong&gt;ABA&lt;/strong&gt;，公共子序列为ABA。最长公共子序列（LCS）也就是公共子序列中长度最长的那个。而子串是加了更严格条件的子序列，要求在两个母串中连续出现，如：ABC&lt;strong&gt;BD&lt;/strong&gt;AB 与 &lt;strong&gt;BD&lt;/strong&gt;CABA，BD是公共子串。两个母串的最长公共子序列为 &lt;strong&gt;BCBA&lt;/strong&gt; ,最长公共子串为 &lt;strong&gt;AB&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于 &lt;strong&gt;母串&lt;/strong&gt;：&lt;br&gt;X={X1,X2,X3,…,Xm}&lt;br&gt;Y={y1,y2,y3,yn}&lt;br&gt;求最长公共子序列和最长公共子串。&lt;/p&gt;
&lt;h1 id=&quot;最长公共子序列（LCS）&quot;&gt;&lt;a href=&quot;#最长公共子序列（LCS）&quot; class=&quot;headerlink&quot; title=&quot;最长公共子序列（LCS）&quot;&gt;&lt;/a&gt;最长公共子序列（LCS）&lt;/h1&gt;&lt;h2 id=&quot;问题分析&quot;&gt;&lt;a href=&quot;#问题分析&quot; class=&quot;headerlink&quot; title=&quot;问题分析&quot;&gt;&lt;/a&gt;问题分析&lt;/h2&gt;&lt;p&gt;假设Z={z1,z2,z3,….,zk}是 &lt;em&gt;X&lt;/em&gt; 与 &lt;em&gt;Y&lt;/em&gt; 的最长公共子序列（LCS），则有（&lt;strong&gt;从后往前分析&lt;/strong&gt;）：&lt;br&gt;数组 &lt;strong&gt;LCS[i,j]&lt;/strong&gt; 保存的是最长公共子序列的 &lt;strong&gt;长度&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;若X(m)=Y(n), 则有：&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Z(k)=X(m)=Y(n),则Z(k-1)是X(m-1)和Y(n-1)的LCS&lt;/li&gt;
&lt;li&gt;LCS(m,n)=LCS(m-1,n-1)+1&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;若X(m)!=Y(n)，则有：&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;若最终Z(k)!=X(m)，则 LCS(m,n)= LCS(m-1,n)&lt;/li&gt;
&lt;li&gt;若最终Z(k)!=Y(n),则 LCS(m,n)= LCS(m,n-1)&lt;/li&gt;
&lt;li&gt;LCS(m,n)=Max{LCS(m-1,n), LCS(m,n-1)}&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;由于子问题具有 &lt;strong&gt;高度重叠性（见下图）&lt;/strong&gt;，可以用二维数组LCS[m][n]保存中间状态，为以后重复利用，用 &lt;strong&gt;空间换时间&lt;/strong&gt;，这也是动态规划的核心思想。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/bodycoder101/MarkdownPhotos/master/%E5%AD%90%E9%97%AE%E9%A2%98%E5%85%B7%E6%9C%89%E7%9A%84%E9%87%8D%E5%8F%A0%E6%80%A7.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;问题求解&quot;&gt;&lt;a href=&quot;#问题求解&quot; class=&quot;headerlink&quot; title=&quot;问题求解&quot;&gt;&lt;/a&gt;问题求解&lt;/h2&gt;&lt;p&gt;使用动态规划求解，LCS的 &lt;strong&gt;状态转移方程&lt;/strong&gt; 为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;LCS[i,j]=0                           if i=0 or j=0&lt;/li&gt;
&lt;li&gt;LCS[i,j]=LCS[i-1, j-1] + 1           if i, j&amp;gt;0, and xi=yj&lt;/li&gt;
&lt;li&gt;LCS[i,j]=Max(LCS[i,j-1],LCS[i-1,j])  if i,j&amp;gt;0, and xi!=yj&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;伪代码描述&quot;&gt;&lt;a href=&quot;#伪代码描述&quot; class=&quot;headerlink&quot; title=&quot;伪代码描述&quot;&gt;&lt;/a&gt;伪代码描述&lt;/h2&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; to m &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; LCS[i,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]←&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; j=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; to n &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; LCS[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,j]←&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;//也就是将数组第一行和第一列初始化为0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; to m &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; j=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; to n &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; X[i]=Y[j] then&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;               LCS[i,j] = LCS[i&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;,j&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;]+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;               b[i,j] = “↖” ; &lt;span class=&quot;comment&quot;&gt;//设置了标志位，利用该标志位，打印出最长公共子序列&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; LCS[i&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;,j]≥C[i,j&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;] then&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;               LCS[i,j] = LCS[i&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;,j]；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;               b[i,j] = “↑” ;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;               LCS[i,j] = LCS[i,j&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;]；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;               b[i,j] = “←” ;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; LCS and b&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;回溯求出最长公共子序列的过程&quot;&gt;&lt;a href=&quot;#回溯求出最长公共子序列的过程&quot; class=&quot;headerlink&quot; title=&quot;回溯求出最长公共子序列的过程&quot;&gt;&lt;/a&gt;回溯求出最长公共子序列的过程&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/bodycoder101/MarkdownPhotos/master/%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97%E5%9B%9E%E6%BA%AF%E8%BF%87%E7%A8%8B.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;参考实现代码&quot;&gt;&lt;a href=&quot;#参考实现代码&quot; class=&quot;headerlink&quot; title=&quot;参考实现代码&quot;&gt;&lt;/a&gt;参考实现代码&lt;/h2&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;59&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;60&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;61&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;62&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;63&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;65&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;66&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;67&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;68&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;69&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;70&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;LCSLength&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; m,&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n,&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *x,&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *y,&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; **LCS,&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; **b)&lt;/span&gt;  &lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i,j;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i&amp;lt;=m; i++)  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        LCS[i][&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;  &lt;span class=&quot;comment&quot;&gt;//将数组的第一行置为0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i&amp;lt;=n; i++)  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        LCS[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;][i] = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;//将数组的第一列置为0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i&amp;lt;=m; i++)  &lt;span class=&quot;comment&quot;&gt;//按行的顺序分别求出LCS中各元素的值并保存&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#123;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(j=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; j&amp;lt;=n; j++)  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#123;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(x[i]==y[j])  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#123;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                LCS[i][j]=LCS[i&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;][j&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;]+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                b[i][j]=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(c[i&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;][j]&amp;gt;=c[i][j&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;])  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#123;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                LCS[i][j]=LCS[i&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;][j];  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                b[i][j]=&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#123;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                 LCS[i][j]=LCS[i][j&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;];  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                 b[i][j]=&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;LCS&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i,&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j,&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *x,&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; **b)&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;//自底向上求解（回溯），递归得到最长公共子序列&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(i==&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; || j==&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#123;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(b[i][j]==&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#123;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        LCS(i&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;,j&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;,x,b);  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt;&amp;lt;&amp;lt;x[i]&amp;lt;&amp;lt;&lt;span class=&quot;string&quot;&gt;&quot; &quot;&lt;/span&gt;;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(b[i][j]==&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#123;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        LCS(i&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;,j,x,b);  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#123;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        LCS(i,j&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;,x,b);  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; argc, &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; **argv)&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; x[&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;] = &amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;ABCBDAB&quot;&lt;/span&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; y[&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;] = &amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;BDCABA&quot;&lt;/span&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b[&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;][&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; LCS[&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;][&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; m, n;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    m = &lt;span class=&quot;built_in&quot;&gt;strlen&lt;/span&gt;(x);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    n = &lt;span class=&quot;built_in&quot;&gt;strlen&lt;/span&gt;(y);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    LCSLength(m, n, x, y, LCS, b); &lt;span class=&quot;comment&quot;&gt;//也就是LCS[m][n]的值为最大长度&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;LCS length is:&quot;&lt;/span&gt; &amp;lt;&amp;lt; LCS[m][n]&amp;lt;&amp;lt;&lt;span class=&quot;string&quot;&gt;&#39;\n&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;LCS:&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&#39;\n&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    LCS(m, n, b, x,);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;算法分析&quot;&gt;&lt;a href=&quot;#算法分析&quot; class=&quot;headerlink&quot; title=&quot;算法分析&quot;&gt;&lt;/a&gt;算法分析&lt;/h2&gt;&lt;p&gt;由于每次调用至少 &lt;strong&gt;向上或向左或斜向上&lt;/strong&gt; 移动一步，故最多调用(m + n)次就会遇到i = 0或j = 0的情况，此时开始返回。&lt;br&gt;返回时与递归调用时方向相反，步数相同，故算法时间复杂度为 &lt;strong&gt;Θ(m + n)&lt;/strong&gt;。&lt;/p&gt;
&lt;h1 id=&quot;动态规划题型总结&quot;&gt;&lt;a href=&quot;#动态规划题型总结&quot; class=&quot;headerlink&quot; title=&quot;动态规划题型总结&quot;&gt;&lt;/a&gt;动态规划题型总结&lt;/h1&gt;&lt;p&gt;使用动态规划解题需满足的条件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;问题可分为多个相关子问题&lt;/li&gt;
&lt;li&gt;问题的最优解包含子问题的最优解，问题具有 &lt;strong&gt;最优子结构&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;子问题的解被重复利用（子问题的高度重叠性），&lt;strong&gt;将子问题的解保存在表中（一般是二维数组）&lt;/strong&gt;，以后用到时直接存取，这是一种空间换时间的做法，也是DP的核心思想。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;参考博客&quot;&gt;&lt;a href=&quot;#参考博客&quot; class=&quot;headerlink&quot; title=&quot;参考博客&quot;&gt;&lt;/a&gt;参考博客&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/en-heng/p/3963803.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;最长公共子序列与最长公共子串&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/liufeng_king/article/details/8500084&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;最长公共子序列问题(LCS)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/yysdsyl/article/details/4226630/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;动态规划解最长公共子序列问题&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;从 二月中旬到四月底 这段时间一直忙于找实习，做准备，刷题，牛客上刷了蛮多算法题，遇到过比较多用动态规划解的题，现在实习的事情基本上也已经定下来了，手上也收到几个还满意的offer，一直想找一个时间去总结下此类题目的解法，思路总是有点模糊，容易忘记，现乘着有时间正好总结一下，也方便后面查阅。动态规划最经典的题目莫过于求两个字符串的最长公共子序列（LCS）问题了，我就以这个问题为例子，总结下动态规划的特点及适用场景。&lt;/p&gt;
    
    </summary>
    
      <category term="Algorithms" scheme="http://bodycoder101.github.io/categories/Algorithms/"/>
    
    
      <category term="Dynamic Programming" scheme="http://bodycoder101.github.io/tags/Dynamic-Programming/"/>
    
  </entry>
  
  <entry>
    <title>求解子数组之和的最大值及相应的子数组</title>
    <link href="http://bodycoder101.github.io/2017/04/27/%E6%B1%82%E8%A7%A3%E5%AD%90%E6%95%B0%E7%BB%84%E4%B9%8B%E5%92%8C%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC%E5%8F%8A%E7%9B%B8%E5%BA%94%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84/"/>
    <id>http://bodycoder101.github.io/2017/04/27/求解子数组之和的最大值及相应的子数组/</id>
    <published>2017-04-27T14:42:30.000Z</published>
    <updated>2017-06-13T12:09:07.554Z</updated>
    
    <content type="html">&lt;p&gt;参加了CVTE的2017实习生招聘在线笔试，最后一道编程题，写出了思路，但是无奈时间不太够，没有把代码完全写出来，现趁着有时间把思路整理一下，把实现代码写出来，也是一个不错的总结，也让我对DP有了更好的理解。网上搜索，发现这道题是《编程之美》中的一道题，所以也得出一个结论，这本书也是找工作实习必刷的大菜。&lt;/p&gt;
&lt;h1 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h1&gt;&lt;p&gt;有N个元素的整型数组arr，有正有负，数组中连续一个或多个元素组成一个子数组，这个数组当然有很多子数组，求子数组之和的最大值及相应的子数组。&lt;br&gt;例如：输入[0，-2，3，5，-1，2]应返回7和[3,5,-1]，输入[-9，-2，-3，-5，-3]应返回-2，[-2];&lt;br&gt;要求设计一个o(n)的算法求解。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;问题分析&quot;&gt;&lt;a href=&quot;#问题分析&quot; class=&quot;headerlink&quot; title=&quot;问题分析&quot;&gt;&lt;/a&gt;问题分析&lt;/h1&gt;&lt;p&gt;如果是用基本方法，找出所有的子数组，然后求和，取最大值，时间复杂度必然超过o(n),由于有子问题具有重叠性，可以考虑用 &lt;strong&gt;动态规划&lt;/strong&gt; 求解，下面我就一步步分析，先由子数组之和的最大值分析求解引出，然后在求解子数组的始末下标，得到子数组。&lt;/p&gt;
&lt;h1 id=&quot;求解子数组之和的最大值&quot;&gt;&lt;a href=&quot;#求解子数组之和的最大值&quot; class=&quot;headerlink&quot; title=&quot;求解子数组之和的最大值&quot;&gt;&lt;/a&gt;求解子数组之和的最大值&lt;/h1&gt;&lt;p&gt;考虑用DP求解，从后往前分析，考虑 &lt;strong&gt;最后一个元素&lt;/strong&gt; arr[n-1]与最大子数组的关系，有下面三种情况(相应的3个子问题)：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;arr[n-1]单独构成最大子数组&lt;/li&gt;
&lt;li&gt;最大子数组以arr[n-1]结尾&lt;/li&gt;
&lt;li&gt;最大子数组跟arr[n-1]没有关系，最大子数组在arr[0–n-2]之间，转换为考虑元素arr[n-2]&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;现假设：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;以arr[n-1]为结尾的最大子数组和为End[n-1]&lt;/li&gt;
&lt;li&gt;在[0–n-1]范围内最大的子数组和为All[n-1]&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;则有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;子问题1，对应arr[n-1]&lt;/li&gt;
&lt;li&gt;子问题2，对应End[n-1],有关系End[n-1]= max{End[n-2]+arr[n-1], arr[n-1]};&lt;/li&gt;
&lt;li&gt;子问题3，对应All[n-2]&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;则有: &lt;strong&gt;All[n-1] = max(arr[n-1], End[n-1], All[n-2]); n&amp;gt;1&lt;/strong&gt;&lt;br&gt;从后往前考虑，&lt;strong&gt;初始化情况为：End[0]=All[0]=arr[0]; n=1；&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;则根据分析，有 &lt;strong&gt;状态转移方程：&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;All[i] = max{arr[i],End[i-1]+arr[i],All[i-1]}&lt;/strong&gt;&lt;br&gt;给出代码：&lt;/p&gt;
&lt;h2 id=&quot;基础代码&quot;&gt;&lt;a href=&quot;#基础代码&quot; class=&quot;headerlink&quot; title=&quot;基础代码&quot;&gt;&lt;/a&gt;基础代码&lt;/h2&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; max(a,b) (a&amp;gt;b ? a : b)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Maxsum_dp&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; *arr, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; size)&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; End[&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;] = &amp;#123;-INF&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; All[&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;] = &amp;#123;-INF&amp;#125;；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  End[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] = All[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] = arr[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];&lt;span class=&quot;comment&quot;&gt;//初始化&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i&amp;lt; size; i++)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    End[i]= max(End[i&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;]+arr[i],arr[i]);&lt;span class=&quot;comment&quot;&gt;//此处的理解：只是将状态转移方程分成两部分，说明End[n-2]为一个负数时，返回arr[n-1]&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    All[i]= max(End[i],All[i&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;]);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; All[size&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;从上述代码中分析，只要我们从头遍历数组，累加求和，如果累加求和小于0（对应End[i-1]）,则从当前元素重新开始计数，&lt;br&gt;否则就一直累加，求其中的最大值即可。&lt;/p&gt;
&lt;h2 id=&quot;扩展版代码&quot;&gt;&lt;a href=&quot;#扩展版代码&quot; class=&quot;headerlink&quot; title=&quot;扩展版代码&quot;&gt;&lt;/a&gt;扩展版代码&lt;/h2&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Maxsum_ultimate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; * arr, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; size)&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; maxSum = -INF;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; sum = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; size; ++i)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(sum &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            sum = arr[i];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            sum += arr[i];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(sum &amp;gt; maxSum)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            maxSum = sum;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; maxSum;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;求解子数组之和最大值对应的子数组，即返回最大子数组的始末位置&quot;&gt;&lt;a href=&quot;#求解子数组之和最大值对应的子数组，即返回最大子数组的始末位置&quot; class=&quot;headerlink&quot; title=&quot;求解子数组之和最大值对应的子数组，即返回最大子数组的始末位置&quot;&gt;&lt;/a&gt;求解子数组之和最大值对应的子数组，即返回最大子数组的始末位置&lt;/h1&gt;&lt;p&gt;分析：从扩展版代码中，可以知道，每当 当前子数组的和（sum）小于0时，便是新一轮子数组的开始；每当更新最大和（maxSum）时，便对应可能的结束下标，&lt;strong&gt;此时&lt;/strong&gt; 只要用本轮的起始和结束位置更新对应的最大子数组的始末位置即可，直到程序结束，最大子数组的始末位置即被记录下来。&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Maxsum_location&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; * arr, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; size, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &amp;amp; start, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &amp;amp; end)&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; maxSum = -INF;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; sum = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; substart = start = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;  &lt;span class=&quot;comment&quot;&gt;/* substart记录每次当前起始位置 */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; size; ++i)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(sum &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            sum = arr[i];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            substart = i;     &lt;span class=&quot;comment&quot;&gt;/* 记录当前的起始位置 */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            sum += arr[i];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(sum &amp;gt; maxSum)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            maxSum = sum;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            start = substart; &lt;span class=&quot;comment&quot;&gt;/* 记录并更新最大子数组起始位置 */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            end = i;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;参考博文&quot;&gt;&lt;a href=&quot;#参考博文&quot; class=&quot;headerlink&quot; title=&quot;参考博文&quot;&gt;&lt;/a&gt;参考博文&lt;/h1&gt;&lt;p&gt; &lt;a href=&quot;http://www.ahathinking.com/archives/120.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;最大子数组和&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;http://www.cnblogs.com/xkfz007/archive/2012/05/17/2506299.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;三种算法求解一个数组的子数组最大和&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;参加了CVTE的2017实习生招聘在线笔试，最后一道编程题，写出了思路，但是无奈时间不太够，没有把代码完全写出来，现趁着有时间把思路整理一下，把实现代码写出来，也是一个不错的总结，也让我对DP有了更好的理解。网上搜索，发现这道题是《编程之美》中的一道题，所以也得出一个结论，这本书也是找工作实习必刷的大菜。&lt;/p&gt;
&lt;h1 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h1&gt;&lt;p&gt;有N个元素的整型数组arr，有正有负，数组中连续一个或多个元素组成一个子数组，这个数组当然有很多子数组，求子数组之和的最大值及相应的子数组。&lt;br&gt;例如：输入[0，-2，3，5，-1，2]应返回7和[3,5,-1]，输入[-9，-2，-3，-5，-3]应返回-2，[-2];&lt;br&gt;要求设计一个o(n)的算法求解。&lt;br&gt;
    
    </summary>
    
      <category term="笔试面试" scheme="http://bodycoder101.github.io/categories/%E7%AC%94%E8%AF%95%E9%9D%A2%E8%AF%95/"/>
    
    
      <category term="算法" scheme="http://bodycoder101.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="实习" scheme="http://bodycoder101.github.io/tags/%E5%AE%9E%E4%B9%A0/"/>
    
      <category term="动态规划" scheme="http://bodycoder101.github.io/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>腾讯实习生笔试编程题--满二叉排序树，给定三个结点，求公共父结点</title>
    <link href="http://bodycoder101.github.io/2017/04/07/%E8%85%BE%E8%AE%AF%E5%AE%9E%E4%B9%A0%E7%94%9F%E7%AC%94%E8%AF%95%E7%BC%96%E7%A8%8B%E9%A2%98--%E6%BB%A1%E4%BA%8C%E5%8F%89%E6%8E%92%E5%BA%8F%E6%A0%91%EF%BC%8C%E7%BB%99%E5%AE%9A%E4%B8%89%E4%B8%AA%E7%BB%93%E7%82%B9%EF%BC%8C%E6%B1%82%E5%85%AC%E5%85%B1%E7%88%B6%E7%BB%93%E7%82%B9/"/>
    <id>http://bodycoder101.github.io/2017/04/07/腾讯实习生笔试编程题--满二叉排序树，给定三个结点，求公共父结点/</id>
    <published>2017-04-07T06:57:31.000Z</published>
    <updated>2017-06-13T11:45:45.186Z</updated>
    
    <content type="html">&lt;p&gt;今年（2017）腾讯暑期实习生招聘笔试感觉好难，题目分两个部分总共2个小时，第一部分是30道不定项选择题，第二部分包含2道简答题和2道编程题，&lt;br&gt;第一道编程题做了一半，没完全写出来，现在有时间总结一下：&lt;br&gt;题目：一颗满二叉排序树，节点值范围为：1~2^(N-1),给定三个子节点，求最大的公共父节点；&lt;br&gt;     如输入层数N=4，子节点11,13,15; 则输出:12&lt;br&gt;     &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;分析&quot;&gt;&lt;a href=&quot;#分析&quot; class=&quot;headerlink&quot; title=&quot;分析&quot;&gt;&lt;/a&gt;分析&lt;/h1&gt;&lt;p&gt;解决这道题的关键，主要是要清晰的知道二叉排序树的性质：&lt;strong&gt;左节点的值小于父节点的值，右节点值大于父节点的值。&lt;/strong&gt;&lt;br&gt;当&lt;strong&gt;N=4&lt;/strong&gt;时，共有15个节点对应的满二叉排序树为（可利用二分法从上到下建立二叉排序树）：&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/bodycoder101/MarkdownPhotos/master/N_4Trees.jpg&quot; alt=&quot;&quot;&gt;;&lt;br&gt;可以知道有以下性质：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;以8为根节点，在左子树中一直往右走，可以找到左子树的最大值7，比根节点小1；&lt;/li&gt;
&lt;li&gt;右子树一直往左走，可以找到右子树的最小值9，比根节点大1；&lt;/li&gt;
&lt;li&gt;根节点的值是最左端的值和最右端的值之和的一半。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;我们可以这样找最大的公共父结点（可以用分治法）：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果输入的结点在根结点的两边，则最大公共父结点必然是根结点，直接返回根结点；&lt;/li&gt;
&lt;li&gt;如果输入的结点都在根结点的左边，往左子树遍历，更新根结点的值，利用性质&lt;em&gt;1 &amp;amp; 3&lt;/em&gt;，得到新树的最右结点及根结点的值；&lt;/li&gt;
&lt;li&gt;如果输入的结点都在根结点的右边，往右子树遍历，更新根结点的值，利用性质&lt;em&gt;2 &amp;amp; 3&lt;/em&gt;，得到新树的最左结点及根结点的值；&lt;/li&gt;
&lt;li&gt;重复2.3步骤，直到出现1情况，结束。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;实现代码&quot;&gt;&lt;a href=&quot;#实现代码&quot; class=&quot;headerlink&quot; title=&quot;实现代码&quot;&gt;&lt;/a&gt;实现代码&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;实现方法1&lt;/strong&gt;是实现题目要求的，只输入层数&lt;strong&gt;N&lt;/strong&gt;和&lt;strong&gt;3&lt;/strong&gt;个子结点值，得到最大公共父结点；&lt;br&gt;&lt;strong&gt;实现方法2&lt;/strong&gt;是扩展的，具有更好的通用性，输入层数&lt;strong&gt;N&lt;/strong&gt;、子结点个数&lt;strong&gt;n&lt;/strong&gt;及子结点的值，得到最大公共父结点。&lt;/p&gt;
&lt;h2 id=&quot;实现方法1&quot;&gt;&lt;a href=&quot;#实现方法1&quot; class=&quot;headerlink&quot; title=&quot;实现方法1&quot;&gt;&lt;/a&gt;实现方法1&lt;/h2&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;  &lt;span class=&quot;title&quot;&gt;Main&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		Scanner in = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Scanner(System.in);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (in.hasNextInt()) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;// 树的高度&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; k = in.nextInt();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;// 最开始根节点的值&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; root = (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;) Math.pow(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, k) / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;// 最开始的最左叶子节点和最右叶子节点&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; leftNode = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; rightNode = (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;) Math.pow(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, k) - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;// 输入任意3叶子节点的值&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; node1 = in.nextInt();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; node2 = in.nextInt();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; node3 = in.nextInt();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i &amp;lt;= k; i++) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;comment&quot;&gt;// 3个叶子节点全在根节点的左部,更新最右节点和根节点&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (node1 &amp;lt; root &amp;amp;&amp;amp; node2 &amp;lt; root &amp;amp;&amp;amp; node3 &amp;lt; root) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					rightNode = root - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					root = (leftNode + rightNode) / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;comment&quot;&gt;// 3个叶子节点全在根节点的右部,更新最左节点和根节点&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (node1 &amp;gt; root &amp;amp;&amp;amp; node2 &amp;gt; root &amp;amp;&amp;amp; node3 &amp;gt; root) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					leftNode = root + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					root = (leftNode + rightNode) / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;comment&quot;&gt;// 一大一小的情形下根节点即为最大公共父节点&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					System.out.println(root);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;实现方法2&quot;&gt;&lt;a href=&quot;#实现方法2&quot; class=&quot;headerlink&quot; title=&quot;实现方法2&quot;&gt;&lt;/a&gt;实现方法2&lt;/h2&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;59&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;60&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;61&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;62&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;63&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;65&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;66&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;67&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;68&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;69&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;70&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;71&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;72&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;73&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;74&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;75&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;76&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;77&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * 改进版，输入层数N，节点数n，个数范围为：2-2^-1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * 输出二叉排序树的公共父节点&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; *&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; */&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Main&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		Scanner in = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Scanner(System.in);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (in.hasNextInt()) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;// 树的高度&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; N = in.nextInt();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;// 最开始根节点的值&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; root = (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;) Math.pow(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, N) / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;// 最开始的最左叶子节点和最右叶子节点&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; leftNode = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; rightNode = (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;) Math.pow(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, N) - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;// 输入任意n叶子节点的值&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n = in.nextInt();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[] arrNodes = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[n];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; arrNodes.length; i++) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				arrNodes[i] = in.nextInt();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;// 从上到下按层次遍历N层&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i &amp;lt;= N; i++) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; count = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; j &amp;lt; n; j++) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					&lt;span class=&quot;comment&quot;&gt;// 都在左边，count+1；&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (arrNodes[j] &amp;lt; root) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;						count += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					&lt;span class=&quot;comment&quot;&gt;// 都在右边，count+2&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (arrNodes[j] &amp;gt; root) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;						count += &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					&lt;span class=&quot;comment&quot;&gt;// 其中有一个是根节点&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;						count += &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				 * count的值n或者2n或者两者之间，&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				 * n代表都在左边，更新最右节点和根节点&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				 * 2n代表都在右边，更新最左节点和根节点&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				 * 两者之间代表，分布在根节点两边，直接返回根节点&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				 */&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (count == n) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					rightNode = root - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					root = (leftNode + rightNode) / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (count == &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; * n) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					leftNode = root + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					root = (leftNode + rightNode) / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					System.out.println(root);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					&lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		in.close();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;测试结果&quot;&gt;&lt;a href=&quot;#测试结果&quot; class=&quot;headerlink&quot; title=&quot;测试结果&quot;&gt;&lt;/a&gt;测试结果&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/bodycoder101/MarkdownPhotos/master/Result.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;参考博文&quot;&gt;&lt;a href=&quot;#参考博文&quot; class=&quot;headerlink&quot; title=&quot;参考博文&quot;&gt;&lt;/a&gt;参考博文&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/f91og/p/6663633.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;f91og的博客&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;今年（2017）腾讯暑期实习生招聘笔试感觉好难，题目分两个部分总共2个小时，第一部分是30道不定项选择题，第二部分包含2道简答题和2道编程题，&lt;br&gt;第一道编程题做了一半，没完全写出来，现在有时间总结一下：&lt;br&gt;题目：一颗满二叉排序树，节点值范围为：1~2^(N-1),给定三个子节点，求最大的公共父节点；&lt;br&gt;     如输入层数N=4，子节点11,13,15; 则输出:12&lt;br&gt;
    
    </summary>
    
      <category term="笔试面试" scheme="http://bodycoder101.github.io/categories/%E7%AC%94%E8%AF%95%E9%9D%A2%E8%AF%95/"/>
    
    
      <category term="算法" scheme="http://bodycoder101.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="实习" scheme="http://bodycoder101.github.io/tags/%E5%AE%9E%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Java学习之集合框架（上）</title>
    <link href="http://bodycoder101.github.io/2017/03/26/JAVA%E5%AD%A6%E4%B9%A0%E4%B9%8B%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6%EF%BC%88%E4%B8%8A%EF%BC%89/"/>
    <id>http://bodycoder101.github.io/2017/03/26/JAVA学习之集合框架（上）/</id>
    <published>2017-03-26T06:39:43.000Z</published>
    <updated>2017-03-27T09:10:53.243Z</updated>
    
    <content type="html">&lt;h1 id=&quot;相关概念&quot;&gt;&lt;a href=&quot;#相关概念&quot; class=&quot;headerlink&quot; title=&quot;相关概念&quot;&gt;&lt;/a&gt;相关概念&lt;/h1&gt;&lt;p&gt;框架（framework）是一个类的集合，奠定了创建高级功能的基础；Java中的集合类是一种工具类，相当于一个容器，可以存储任意数量的具有&lt;strong&gt;共同属性&lt;/strong&gt;的对象；Java集合类库构成了集合类的框架，集合框架为集合的实现者定义了大量的接口和抽象类，基于此增加了代码的重用性。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;集合的作用&quot;&gt;&lt;a href=&quot;#集合的作用&quot; class=&quot;headerlink&quot; title=&quot;集合的作用&quot;&gt;&lt;/a&gt;集合的作用&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;在类的内部对数据进行组织；&lt;/li&gt;
&lt;li&gt;简单而快速地搜索大数量的条目数据；&lt;/li&gt;
&lt;li&gt;提供统一的接口，将不同对象封装在一起，便于操作和管理；&lt;/li&gt;
&lt;li&gt;有的集合接口（List），提供了一系列有序的元素，并且可以在序列中间快速插入或者删除元素；&lt;/li&gt;
&lt;li&gt;有的集合接口（Map），提供映射关系，可以通过任意类型的关键字（Key）快速的找到对应的唯一对象（Value）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;集合和数组的选择&quot;&gt;&lt;a href=&quot;#集合和数组的选择&quot; class=&quot;headerlink&quot; title=&quot;集合和数组的选择&quot;&gt;&lt;/a&gt;集合和数组的选择&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;为什么选择集合而不是数组？&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;数组长度固定，并且同一个数组只能存放类型一样的数据（基本类型/引用类型）；&lt;/li&gt;
&lt;li&gt;集合可以存储和操作数目不固定的一组数据；&lt;/li&gt;
&lt;li&gt;若程序时不知道究竟需要多少对象，需要在空间不足时自动扩增容量，则需要使用容器类库，数组不适用；&lt;/li&gt;
&lt;li&gt;查找元素时，数组需要一个个遍历查找，而集合（HashMap）可以通过任意关键字（Key）查找所映射的具体对象（Value），可以提高效率。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;集合框架体系结构&quot;&gt;&lt;a href=&quot;#集合框架体系结构&quot; class=&quot;headerlink&quot; title=&quot;集合框架体系结构&quot;&gt;&lt;/a&gt;集合框架体系结构&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/bodycoder101/MarkdownPhotos/master/Java%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;我们关注常用的几个接口：&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/bodycoder101/MarkdownPhotos/master/Java%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6%E7%AE%80%E7%89%88.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;从上面的集合框架图可以看到，第一层是父接口，包含两种类型集合（Collection）和图（Map）；&lt;/li&gt;
&lt;li&gt;第二层是子接口，主要有List、Queue、Set接口，第三层是子接口对应的具体实现类；&lt;/li&gt;
&lt;li&gt;List（序列）集合中的元素是有序的且可以重复的，Set集合（数学中的集合概念）是无序的且不可重复的。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;代码演示&quot;&gt;&lt;a href=&quot;#代码演示&quot; class=&quot;headerlink&quot; title=&quot;代码演示&quot;&gt;&lt;/a&gt;代码演示&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;课程类（Course.java）&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; com.imooc.collection;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Course&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String id;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String name;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Course&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String id, String name)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.id = id;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name = name;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;学生类（Student.java)&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; com.imooc.collection;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.HashSet;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.Set;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Student&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String id;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String name;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Set&amp;lt;Course&amp;gt; courses;&lt;span class=&quot;comment&quot;&gt;//使用泛型规定courses的类型&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Student&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String id, String name)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.id = id;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name = name;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.courses = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HashSet&amp;lt;Course&amp;gt;();&lt;span class=&quot;comment&quot;&gt;//用set的实现类HashSet进行初始化&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;ArrayList增删改查（ListTest.java）&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;59&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;60&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;61&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;62&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;63&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;65&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;66&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;67&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;68&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;69&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;70&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;71&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;72&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;73&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;74&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;75&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;76&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;77&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;78&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;79&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;80&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;81&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;82&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;83&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;84&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;85&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;86&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;87&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;88&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;89&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;90&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;91&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;92&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;93&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;94&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;95&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;96&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;97&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;98&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;99&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;100&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;101&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;102&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;103&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;104&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;105&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;106&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;107&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;108&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; com.imooc.collection;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.ArrayList;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.Arrays;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.Iterator;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.List;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ListTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/*List中的元素是有序并且可以重复的*/&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; List CoursesToSelect;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ListTest&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//注意List是个接口，不能直接将其实例化&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.CoursesToSelect = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TestAdd&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;/*---普通add测试---*/&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Course cr1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Course(&lt;span class=&quot;string&quot;&gt;&quot;1&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;数据结构&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        CoursesToSelect.add(cr1);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;/*---指定位置add测试，下挤---*/&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Course cr2 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Course(&lt;span class=&quot;string&quot;&gt;&quot;2&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;常用算法&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        CoursesToSelect.add(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, cr2);&lt;span class=&quot;comment&quot;&gt;//添加到第一个位置，会将原有的挤下去。&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;/*---越界add测试---*/&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//Course cr3 = new Course(&quot;3&quot;,&quot;JAVA&quot;);&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//CoursesToSelect.add(3, cr3);&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         * 注意！！&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         * 0，1，2均不报错&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         * 3报错：java.lang.IndexOutOfBoundsException  下标越界&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         * */&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;/*---普通组合add添加---*/&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Course[] courseList = &amp;#123;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Course(&lt;span class=&quot;string&quot;&gt;&quot;3&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;Javaweb&quot;&lt;/span&gt;),&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Course(&lt;span class=&quot;string&quot;&gt;&quot;4&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;数据库&quot;&lt;/span&gt;)&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        CoursesToSelect.addAll(Arrays.asList(courseList));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;/*---指定位置组合add添加---*/&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Course[] courseList2 = &amp;#123;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Course(&lt;span class=&quot;string&quot;&gt;&quot;5&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;高等数学&quot;&lt;/span&gt;),&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Course(&lt;span class=&quot;string&quot;&gt;&quot;6&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;计算机网络&quot;&lt;/span&gt;)&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        CoursesToSelect.addAll(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,Arrays.asList(courseList2));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testQueryAll&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;  &lt;span class=&quot;comment&quot;&gt;//查看全部元素&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;普通遍历List&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;CoursesToSelect.size();i++)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;/*对象存入集合都变成Object类型，取出时需要类型转换*/&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            Course tempCourse = (Course) CoursesToSelect.get(i);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;课程&quot;&lt;/span&gt;+(i+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)+&lt;span class=&quot;string&quot;&gt;&quot;:&quot;&lt;/span&gt;+tempCourse.name+&lt;span class=&quot;string&quot;&gt;&quot; 课程id:&quot;&lt;/span&gt;+tempCourse.id);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testIterator&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;  &lt;span class=&quot;comment&quot;&gt;//通过迭代器遍历List&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;通过迭代器遍历List&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//迭代器是用来遍历集合中的元素的，本身不具备任何存储元素的功能；依赖于某个集合存在，本身不能独立存在&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//迭代器本身是个接口，通过集合的iterator()方法，取得迭代器的实例&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Iterator it = CoursesToSelect.iterator();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(it.hasNext())&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            Course cr = (Course) it.next();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;课程:&quot;&lt;/span&gt;+cr.name+&lt;span class=&quot;string&quot;&gt;&quot; 课程id:&quot;&lt;/span&gt;+cr.id);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testForEach&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;  &lt;span class=&quot;comment&quot;&gt;//通过foreach遍历List&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;通过foreach遍历List&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(Object obj:CoursesToSelect)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            Course cr = (Course)obj;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;课程:&quot;&lt;/span&gt;+cr.name+&lt;span class=&quot;string&quot;&gt;&quot; 课程id:&quot;&lt;/span&gt;+cr.id);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testModify&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;  &lt;span class=&quot;comment&quot;&gt;//修改&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        CoursesToSelect.set(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Course(&lt;span class=&quot;string&quot;&gt;&quot;100&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;Spring&quot;&lt;/span&gt;));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testRemove&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;  &lt;span class=&quot;comment&quot;&gt;//删除，记住每删除一次，元素都会上移&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        CoursesToSelect.remove(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//删除的第一种方式&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;/*在上面删除位置1的元素后，后面的元素会整体上移，位置1又有了新元素，所以下面的语句是删除现在位置2的新元素*/&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Course cr = (Course) CoursesToSelect.get(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);   &lt;span class=&quot;comment&quot;&gt;//删除的第二种方式&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        CoursesToSelect.remove(cr);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Course[] courseList =&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &amp;#123;(Course) CoursesToSelect.get(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;),&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                (Course) CoursesToSelect.get(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;),&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                (Course) CoursesToSelect.get(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        CoursesToSelect.removeAll(Arrays.asList(courseList));   &lt;span class=&quot;comment&quot;&gt;//删除的第三种方式，removeAll&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        ListTest lt = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ListTest();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        lt.TestAdd();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        lt.testQueryAll();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        lt.testIterator();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        lt.testModify();  &lt;span class=&quot;comment&quot;&gt;//修改课程&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        lt.testRemove();  &lt;span class=&quot;comment&quot;&gt;//删除课程&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        lt.testForEach();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;Set集合的基本用法(SetTest.java)&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;59&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;60&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;61&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;62&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;63&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;65&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;66&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;67&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;68&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;69&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;70&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;71&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;72&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;73&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;74&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;75&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;76&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;77&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;78&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; com.imooc.collection;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.ArrayList;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.Arrays;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.List;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.Scanner;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SetTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;Course&amp;gt; CoursesToSelect;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SetTest&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.CoursesToSelect = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;Course&amp;gt;();&lt;span class=&quot;comment&quot;&gt;//待选课程是使用数组序列存放&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TestAdd&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Course cr1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Course(&lt;span class=&quot;string&quot;&gt;&quot;1&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;数据结构&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        CoursesToSelect.add(cr1);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Course cr2 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Course(&lt;span class=&quot;string&quot;&gt;&quot;2&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;常用算法&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        CoursesToSelect.add(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, cr2);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Course[] courseList = &amp;#123;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Course(&lt;span class=&quot;string&quot;&gt;&quot;3&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;Javaweb&quot;&lt;/span&gt;),&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Course(&lt;span class=&quot;string&quot;&gt;&quot;4&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;数据库&quot;&lt;/span&gt;)&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        CoursesToSelect.addAll(Arrays.asList(courseList));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Course[] courseList2 = &amp;#123;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Course(&lt;span class=&quot;string&quot;&gt;&quot;5&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;高等数学&quot;&lt;/span&gt;),&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Course(&lt;span class=&quot;string&quot;&gt;&quot;6&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;计算机网络&quot;&lt;/span&gt;)&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        CoursesToSelect.addAll(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,Arrays.asList(courseList2));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testForEach&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(Course course:CoursesToSelect)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;课程:&quot;&lt;/span&gt;+course.name+&lt;span class=&quot;string&quot;&gt;&quot; 课程id:&quot;&lt;/span&gt;+course.id);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        SetTest st = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SetTest();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        st.TestAdd();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        st.testForEach();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//创建一个学生对象&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Student stu1= &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Student(&lt;span class=&quot;string&quot;&gt;&quot;1&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;小明&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;欢迎&quot;&lt;/span&gt;+stu1.name+&lt;span class=&quot;string&quot;&gt;&quot;选课！&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Scanner sc = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Scanner(System.in);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;;i++)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;请输入课程ID&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            String courseId = sc.next();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(Course course:st.CoursesToSelect)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(course.id.equals(courseId))&amp;#123;  &lt;span class=&quot;comment&quot;&gt;//字符串是对象,其equals()方法比较的是实际内容！&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    stu1.courses.add(course); &lt;span class=&quot;comment&quot;&gt;//将待选课程（使用ArrayList存储）中的对象course初始化学生类中的course域（使用HashSet存储）&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        st.testForEachForSet(stu1);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testForEachForSet&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Student stu)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//打印输出学生所选的课程&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//遍历Set中的元素只能用foreach或是iterator，不能想List那样用get(index)，因为Set是无序的。&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//Set中的元素是不可重复的，重复的添加Set只会保存一个该对象（的引用）&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//Set是可以添加空对象的，null&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//Set没有提供像List那样的set()方法，因为Set集合是无序的&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;共选择了&quot;&lt;/span&gt;+stu.courses.size()+&lt;span class=&quot;string&quot;&gt;&quot;门课程&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(Course course:stu.courses)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            System.out.println(stu.name+&lt;span class=&quot;string&quot;&gt;&quot;选择了&quot;&lt;/span&gt;+course.name+&lt;span class=&quot;string&quot;&gt;&quot; 课程id:&quot;&lt;/span&gt;+course.id);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//没有介绍的关于Set的remove(),size()等方法，大致跟List一样&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;-EOF&lt;/p&gt;
&lt;h1 id=&quot;参考博文&quot;&gt;&lt;a href=&quot;#参考博文&quot; class=&quot;headerlink&quot; title=&quot;参考博文&quot;&gt;&lt;/a&gt;参考博文&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/qq_33290787/article/details/51781036&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Java集合框架&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.open-open.com/lib/view/open1474167415464.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Java - 集合框架完全解析&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;相关概念&quot;&gt;&lt;a href=&quot;#相关概念&quot; class=&quot;headerlink&quot; title=&quot;相关概念&quot;&gt;&lt;/a&gt;相关概念&lt;/h1&gt;&lt;p&gt;框架（framework）是一个类的集合，奠定了创建高级功能的基础；Java中的集合类是一种工具类，相当于一个容器，可以存储任意数量的具有&lt;strong&gt;共同属性&lt;/strong&gt;的对象；Java集合类库构成了集合类的框架，集合框架为集合的实现者定义了大量的接口和抽象类，基于此增加了代码的重用性。&lt;/p&gt;
    
    </summary>
    
      <category term="Java SE" scheme="http://bodycoder101.github.io/categories/Java-SE/"/>
    
    
      <category term="Java" scheme="http://bodycoder101.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>新环境下Hexo博客部署及维护</title>
    <link href="http://bodycoder101.github.io/2017/02/20/%E6%96%B0%E7%8E%AF%E5%A2%83%E4%B8%8BHexo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2%E5%8F%8A%E7%BB%B4%E6%8A%A4/"/>
    <id>http://bodycoder101.github.io/2017/02/20/新环境下Hexo博客部署及维护/</id>
    <published>2017-02-19T16:00:00.000Z</published>
    <updated>2017-04-28T03:49:00.000Z</updated>
    
    <content type="html">&lt;p&gt;   之前的博客源码一直放在Linux（CentOS）环境下，最近想要更新博客，发现在Linux环境下编辑Markdown文件各种不方便；在Windows环境写好后再传到Linux环境下再部署总觉得多此一举，遂想要将博客迁移出来，期间遇到了各种问题，还好都解决了。将出现的问题及解决方法总结记录下来，以后或许还能用上。&lt;br&gt;   &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h2&gt;&lt;p&gt;之前博主已经将博客源码推送至github中，和多数人一样，是一个仓库做两个分支：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;master分支：存放博客部署的静态文件(也就是public文件夹下的内容)&lt;/li&gt;
&lt;li&gt;hexo分支：存放博客源文件，配置文件等&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在新环境(Windows)下安装配置&lt;em&gt;Git，Node.js，Python&lt;/em&gt;;Python建议下载2.7版本，安装好后别忘了配置环境变量。&lt;br&gt;提供下载链接：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/waylau/git-for-win&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/download/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Node.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.python.org/downloads/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;新环境部署&quot;&gt;&lt;a href=&quot;#新环境部署&quot; class=&quot;headerlink&quot; title=&quot;新环境部署&quot;&gt;&lt;/a&gt;新环境部署&lt;/h2&gt;&lt;p&gt;首先在我们新环境下为我们的博客新建一个目录blog。在该目录下右键执行&lt;strong&gt;Git Bash Here,&lt;/strong&gt;然后克隆你的远程仓库，也就是hexo分支上的内容；&lt;br&gt;&lt;code&gt;git clone https://github.com/bodycoder101/bodycoder101.github.io.git newBlog&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;问题一&quot;&gt;&lt;a href=&quot;#问题一&quot; class=&quot;headerlink&quot; title=&quot;问题一&quot;&gt;&lt;/a&gt;问题一&lt;/h3&gt;&lt;p&gt;出现clone失败报错（Filename too long）：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;GitHub.IO.ProcessException: fatal: unable to stat &amp;apos;plugins/toolongname/example/app/platforms/toolongname/toolongname/build/intermediates/classes/debug/org/toolongname/toolongname/toolongname$toolongname$toolongname.class&amp;apos;: Filename too long&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;后面各种找解决方法，终于找到一个靠谱的方案: &lt;a href=&quot;http://ourcodeworld.com/articles/read/109/how-to-solve-filename-too-long-error-in-git-powershell-and-github-application-for-windows&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Solution&lt;/a&gt;，原因也解释的很清楚；&lt;br&gt;在Bash中键入命令:&lt;code&gt;git config --system core.longpaths true&lt;/code&gt;; 问题解决。&lt;/p&gt;
&lt;h3 id=&quot;问题二&quot;&gt;&lt;a href=&quot;#问题二&quot; class=&quot;headerlink&quot; title=&quot;问题二&quot;&gt;&lt;/a&gt;问题二&lt;/h3&gt;&lt;p&gt;进入博客根目录：&lt;code&gt;cd newBlog&lt;/code&gt;；然后依次键入下列命令&lt;strong&gt;[1]&lt;/strong&gt;：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm install -g hexo-cli&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm install&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm install hexo -server --save&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm install hexo-deployer-git --save&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;出现各种问题，无法安装&lt;em&gt;hexo&lt;/em&gt;:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm ERR! System Windows_NT 6.1.7601&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm ERR! command &amp;quot;c:\\Program Files\\nodejs\\node.exe&amp;quot; &amp;quot;c:\\Program Files\\nodej&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;s\\node_modules\\npm\\bin\\npm-cli.js&amp;quot; &amp;quot;install&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm ERR! cwd f:\Workspace\Angular_workspace\angular-phonecat&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm ERR! node -v v0.10.28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm ERR! npm -v 1.4.9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm ERR! path C:\Users\Shivam\AppData\Roaming\npm-cache\inherits\2.0.1\package&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm ERR! code EPERM&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm ERR! errno 50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm ERR! stack Error: EPERM, unlink &amp;apos;C:\Users\Shivam\AppData\Roaming\npm-cache\i&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;nherits\2.0.1\package&amp;apos;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm http 200 https://registry.npmjs.org/qs&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;找到解决方案，依次键入下列命令：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm config get registry&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm cache clean&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm install express&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;问题完美的解决，然后重新执行[1]处命令，就在博主认为可以愉快的写博客的时候，问题又出现了；&lt;/p&gt;
&lt;h3 id=&quot;问题三&quot;&gt;&lt;a href=&quot;#问题三&quot; class=&quot;headerlink&quot; title=&quot;问题三&quot;&gt;&lt;/a&gt;问题三&lt;/h3&gt;&lt;p&gt;执行&lt;code&gt;hexo clean&lt;/code&gt;,出现下列问题：&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/bodycoder101/MarkdownPhotos/master/hexo_clean_error.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;根据提示键入命令安装：&lt;br&gt;&lt;code&gt;npm rebuild node-sass&lt;/code&gt;&lt;br&gt;安装过程出现各种&lt;code&gt;npm error，gyp error&lt;/code&gt;，在查找问题过程中，出错信息提示：&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/bodycoder101/MarkdownPhotos/master/could_not_find_python.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;那就新环境下安装&lt;strong&gt;Python！&lt;/strong&gt;，忘安装了..&lt;br&gt;至此，问题全部解决，可以愉快的写博客了！&lt;/p&gt;
&lt;h2 id=&quot;参考博客&quot;&gt;&lt;a href=&quot;#参考博客&quot; class=&quot;headerlink&quot; title=&quot;参考博客&quot;&gt;&lt;/a&gt;参考博客&lt;/h2&gt;&lt;p&gt;1.&lt;a href=&quot;http://www.lzblog.cn/2016/11/21/Hexo%E5%8D%9A%E5%AE%A2%E5%A4%9A%E7%94%B5%E8%84%91%E5%90%8C%E6%AD%A5%E5%8F%8A%E6%9B%B4%E6%8D%A2%E7%94%B5%E8%84%91%E5%90%8E%E5%A4%84%E7%90%86%E6%96%B9%E5%BC%8F/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo博客多电脑同步及更换电脑后处理方式&lt;/a&gt;&lt;br&gt;2.&lt;a href=&quot;http://www.rvclient.com/2016/05/21/hexo-everywhere/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在不同的电脑维护Hexo和写作&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;   之前的博客源码一直放在Linux（CentOS）环境下，最近想要更新博客，发现在Linux环境下编辑Markdown文件各种不方便；在Windows环境写好后再传到Linux环境下再部署总觉得多此一举，遂想要将博客迁移出来，期间遇到了各种问题，还好都解决了。将出现的问题及解决方法总结记录下来，以后或许还能用上。&lt;br&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://bodycoder101.github.io/categories/hexo/"/>
    
    
      <category term="git" scheme="http://bodycoder101.github.io/tags/git/"/>
    
      <category term="hexo" scheme="http://bodycoder101.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>JAVA的学习之继承</title>
    <link href="http://bodycoder101.github.io/2017/02/17/JAVA%E7%9A%84%E5%AD%A6%E4%B9%A0%E4%B9%8B%E7%BB%A7%E6%89%BF/"/>
    <id>http://bodycoder101.github.io/2017/02/17/JAVA的学习之继承/</id>
    <published>2017-02-16T16:00:00.000Z</published>
    <updated>2017-04-28T03:49:10.277Z</updated>
    
    <content type="html">&lt;p&gt;本章主要是讲述OOP中的&lt;strong&gt;继承（inheritance）&lt;/strong&gt;，利用继承，人们可以基于已存在的类构造一个新类，继承已存在的类也就是复用这些类的方法和域。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;一、类、超类和子类&quot;&gt;&lt;a href=&quot;#一、类、超类和子类&quot; class=&quot;headerlink&quot; title=&quot;一、类、超类和子类&quot;&gt;&lt;/a&gt;一、类、超类和子类&lt;/h2&gt;&lt;p&gt;继承的定义：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;class Manager extends Employee//Java 用关键字extends代替C++中的冒号：，Java中所有的继承都是公有继承，没有私有继承和保护继承&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//add new files and methods&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Employee称为超类（superclass），基类（base class）或父类（parent class）；Maanager称为子类（subclass）、派生类（derived class）或孩子类（child class）。&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;1-易错点：&quot;&gt;&lt;a href=&quot;#1-易错点：&quot; class=&quot;headerlink&quot; title=&quot;1. 易错点：&quot;&gt;&lt;/a&gt;1. 易错点：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Manager boss=new Manger(...);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Employee[] staff=new Employee[3];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;staff[0]=boss;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;boss.setBonus(5000);//OK&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;staff[0].setBonus(5000);//EROR&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Manager m=staff[i];//EROR&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Employee[] staff=managers;//OK&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Manager boss=(Manager) staff[0];//ok&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上个例子中，变量staff[0]与boss引用同一个对象，编译器将staff[0]看成Employee对象，故语句6错误；&lt;br&gt;语句8错误的原因，并不是所有的雇员都是经理，小不能赋值给大；&lt;br&gt;语句9正确的原因，所有的经理都是雇员，大（子类，大指的是域值大）可以赋值给小（父类）；&lt;br&gt;总结：&lt;strong&gt;只能大赋小&lt;/strong&gt;&lt;br&gt;语句10正确的原因，父类赋值给子类必须进行强制类型转换，编译通过（本身staff[0]就是存储Manager类对象，只不过staff是Employee类的对象数组）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：在将父类转换为之类之前，应该使用&lt;strong&gt;instanceof&lt;/strong&gt;进行检查。&lt;/p&gt;
&lt;h2 id=&quot;二、JAVA中-Object类是所有类的超类&quot;&gt;&lt;a href=&quot;#二、JAVA中-Object类是所有类的超类&quot; class=&quot;headerlink&quot; title=&quot;二、JAVA中 Object类是所有类的超类&quot;&gt;&lt;/a&gt;二、JAVA中 Object类是所有类的超类&lt;/h2&gt;&lt;h3 id=&quot;1-有关散列hasCode的问题：&quot;&gt;&lt;a href=&quot;#1-有关散列hasCode的问题：&quot; class=&quot;headerlink&quot; title=&quot;1.有关散列hasCode的问题：&quot;&gt;&lt;/a&gt;1.有关散列hasCode的问题：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;String s=&amp;quot;OK&amp;quot;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;StringBuilder sb=new StringBuilder(s);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;System.out.println(s.hashCode()+&amp;quot; &amp;quot;+sb.hasCode());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;String t=new String(&amp;quot;OK&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;StringBuilder tb=new StringBuilder(t);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;System.out.println(t.hashCode()+&amp;quot;&amp;quot;+tb.hasCode());&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;打印出来可知，字符串s和t拥有相同的散列码，&lt;strong&gt;字符串的散列码是由内容导出的，所以字符串的散列码相等，字符串缓冲sb与tb有着不同的散列码，散列码是该对象的存储地址，可以看到不相等&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;2-toString方法&quot;&gt;&lt;a href=&quot;#2-toString方法&quot; class=&quot;headerlink&quot; title=&quot;2.toString方法&quot;&gt;&lt;/a&gt;2.toString方法&lt;/h3&gt;&lt;p&gt;绝大多数的toString方法，遵循以下格式：&lt;br&gt;类的名字，随后是一对方括号起来的域值；&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;public String toString()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;return getClass().getName()+&amp;quot;[name=&amp;quot;+name+&amp;quot;,salary=&amp;quot;+salary+&amp;quot;,hireDay&amp;quot;+hireDay+&amp;quot;]&amp;quot;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;只要对象与一个字符串通过操作符&lt;strong&gt;“+”&lt;/strong&gt;连接起来，Java编译就会自动地调用toString方法，获得对象的字符串描述；&lt;/p&gt;
&lt;h3 id=&quot;3-泛型数组列表&quot;&gt;&lt;a href=&quot;#3-泛型数组列表&quot; class=&quot;headerlink&quot; title=&quot;3.泛型数组列表&quot;&gt;&lt;/a&gt;3.泛型数组列表&lt;/h3&gt;&lt;p&gt;主要是实现动态数组&lt;br&gt; &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;ArrayList&amp;lt;Employee&amp;gt; staff=new ArrayList&amp;lt;&amp;gt;(填写初始容量);//在添加或删除元素时，具有自动调节数组容量的功能；&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt; ArrayList是一个采用类型参数的范类型&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本章主要是讲述OOP中的&lt;strong&gt;继承（inheritance）&lt;/strong&gt;，利用继承，人们可以基于已存在的类构造一个新类，继承已存在的类也就是复用这些类的方法和域。&lt;br&gt;
    
    </summary>
    
      <category term="Java SE" scheme="http://bodycoder101.github.io/categories/Java-SE/"/>
    
    
      <category term="JAVA" scheme="http://bodycoder101.github.io/tags/JAVA/"/>
    
  </entry>
  
  <entry>
    <title>JAVA的学习之对象与类</title>
    <link href="http://bodycoder101.github.io/2017/02/16/JAVA%E7%9A%84%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%AF%B9%E8%B1%A1%E4%B8%8E%E7%B1%BB/"/>
    <id>http://bodycoder101.github.io/2017/02/16/JAVA的学习之对象与类/</id>
    <published>2017-02-16T13:01:13.000Z</published>
    <updated>2017-04-28T03:45:56.912Z</updated>
    
    <content type="html">&lt;p&gt;1.对实例域做出修改的方法称为&lt;strong&gt;更改器&lt;/strong&gt;方法，仅仅访问实例域而不进行修改的方法称为&lt;strong&gt;访问器&lt;/strong&gt;方法；&lt;/p&gt;
&lt;p&gt;2.在一个源文件中，只能有一个公共类，但可以有任意数目的非公共类；&lt;/p&gt;
&lt;p&gt;3.数据成员也就是实例域，建议都是使用private修饰，确保封装性；&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;4.私有的方法（private）不会被外部的其他类操作调用，可以将其删去，如果方法是公有的（public）就不能将其删去，因为其他代码可能依赖它；&lt;/p&gt;
&lt;p&gt;5.修饰符中的final以及static的区别和联系？&lt;br&gt;static表示不要实例化就可以使用，修饰的变量或者方法被所有实例共享；&lt;br&gt;final表示不可改变，终态，可以理解为常量，一旦在类中定义并且初始化，就不可改变；&lt;/p&gt;
&lt;p&gt;6.&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;class Employee&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; private static int nextId=1;//该类的所有事例将共享一个nextID，也就是说只有一个&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; private int id;//所有实例（对象）均有各自的拷贝&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;....&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt; 7.静态方法不能操作对象，不能在静态方法中访问实例域，只能访问自身类中的静态域；可以通过类名直接调用静态方法；由static修饰的变量或者函数，表示属于类且不属于类对象的变量和函数；&lt;/p&gt;
&lt;p&gt; 8.类中的静态main方法，用于测试类&lt;br&gt; 二，值调用和引用调用，Java对对像采用的是值专递；总结：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一个方法不能修改一个基本的数据类型的参数（数值型和布尔型）&lt;/li&gt;
&lt;li&gt;一个方法可以改变一个对象参数的状态；&lt;/li&gt;
&lt;li&gt;一个方法不能让对象参数引用一个新的对象；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;9.如果构造器中没有显式的给域赋予初值，那么就会被自动的赋予默认值：数值为0、布尔值为false，对象引用为null；&lt;/p&gt;
&lt;p&gt;10，&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;publi Employee(String name,doble salary)//类的构造器&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;this.name=name;//this指示隐式参数，也就是实际的实例值，参数变量用相同的名字将实例域屏蔽起来&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;this.salary=salary;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;11，Java使用包（package）的主要原因是确保类名的唯一性，相当于C++中的命名空间（namespace），一个源文件中只能包含一个公共类（public static void main(){}）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;列表项&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;public class Window extends Container&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; String warningString;//没有指定访问修饰符public 和 private，这里的变量默认不是private，意味着java.awt包中所有的类的方法都可以访问该变量！&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; ...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;1.对实例域做出修改的方法称为&lt;strong&gt;更改器&lt;/strong&gt;方法，仅仅访问实例域而不进行修改的方法称为&lt;strong&gt;访问器&lt;/strong&gt;方法；&lt;/p&gt;
&lt;p&gt;2.在一个源文件中，只能有一个公共类，但可以有任意数目的非公共类；&lt;/p&gt;
&lt;p&gt;3.数据成员也就是实例域，建议都是使用private修饰，确保封装性；&lt;/p&gt;
    
    </summary>
    
      <category term="Java SE" scheme="http://bodycoder101.github.io/categories/Java-SE/"/>
    
    
      <category term="JAVA" scheme="http://bodycoder101.github.io/tags/JAVA/"/>
    
  </entry>
  
  <entry>
    <title>用hexo搭建个人博客[转]</title>
    <link href="http://bodycoder101.github.io/2016/06/05/%E8%BD%AC-%E7%94%A8hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://bodycoder101.github.io/2016/06/05/转-用hexo搭建个人博客/</id>
    <published>2016-06-04T18:45:07.000Z</published>
    <updated>2017-04-28T03:48:15.116Z</updated>
    
    <content type="html">&lt;p&gt;从很久之前就想要有一个属于自己的博客，如果互联网是一个世界的话，一个有着自己独特域名的博客应该就是在这个世界里面的自己的家吧。由于毕业后工作，后来又忙着考研，这个简单的愿望一直搁浅。&lt;br&gt;现在趁着有闲暇的精力，终于把这个一拖再拖的事情给实现，搭建过程总体是简单的，没有费多少力气，但是还是遇到了一些小问题，现在将遇到的问题记录下来。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;关于博客源码的备份和同步更新&quot;&gt;&lt;a href=&quot;#关于博客源码的备份和同步更新&quot; class=&quot;headerlink&quot; title=&quot;关于博客源码的备份和同步更新&quot;&gt;&lt;/a&gt;关于博客源码的备份和同步更新&lt;/h3&gt;&lt;h4 id=&quot;方案选择&quot;&gt;&lt;a href=&quot;#方案选择&quot; class=&quot;headerlink&quot; title=&quot;方案选择&quot;&gt;&lt;/a&gt;方案选择&lt;/h4&gt;&lt;p&gt;这个让我费时不少，因为考虑到有时候在自己笔记本上更新博客，有时候在实验室电脑上更新，这个时候问题就出现了。其一，不可能每次带U盘copy，其二，如果用百度云或者Dropbox这类云盘，感觉总是有些麻烦的。&lt;br&gt;所以还是考虑用github 存放源码，但是有遇到两个选择：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一种方案是重新开一个repo，这样一个repo放博客生成的静态文件，另外一个repo专门放博客源码。&lt;/li&gt;
&lt;li&gt;另外一种方案是一个repo开两个分支，其中一个master分支主要放静态文件，另外一个分支（自己命名）hexo，专门放博客源码。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第一种方案总感觉冗余，而第二种看起来更加简洁干净（操作起来也遇到了不少麻烦），最终还是选择第二种方案。&lt;/p&gt;
&lt;h4 id=&quot;出现问题&quot;&gt;&lt;a href=&quot;#出现问题&quot; class=&quot;headerlink&quot; title=&quot;出现问题&quot;&gt;&lt;/a&gt;出现问题&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;问题描述&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因为我是先在本地&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;git init 、git add origin &amp;lt;server&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;初始化本地文件夹，然后&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;git add .&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;git commit -m &amp;quot;description&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;git push origin hexo&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;最后一步失败。尝试过git pull命令、并将hexo分支文件清空，然而都无济于事。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解决问题：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;删掉这个库zouzls.github.io,然后重新新建，开两个分支，并设置hexo默认分支，此时两个分支为空。&lt;br&gt;在本地新建一个文件夹，git clone server地址,然后copy原来的博客站文件过来当前文件夹，运行下列命令：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;git add .&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;git commit -m &amp;quot;description&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;git push origin hexo&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后解决问题，博客源码推送到hexo分支，再在新的电脑将源码clone下来就OK了，前提是已经安装有git、nodejs、hexo。至于由博客生成的静态html文件如何放到master分支，网上太多教程就不详述了。&lt;/p&gt;
&lt;h3 id=&quot;最后&quot;&gt;&lt;a href=&quot;#最后&quot; class=&quot;headerlink&quot; title=&quot;最后&quot;&gt;&lt;/a&gt;最后&lt;/h3&gt;&lt;p&gt;人生有涯，知也无涯。&lt;br&gt;坚持学习，保持好奇心。&lt;br&gt;坚持锻炼身体。&lt;br&gt;转载来自：&lt;a href=&quot;http://zouzls.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://zouzls.github.io/&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;从很久之前就想要有一个属于自己的博客，如果互联网是一个世界的话，一个有着自己独特域名的博客应该就是在这个世界里面的自己的家吧。由于毕业后工作，后来又忙着考研，这个简单的愿望一直搁浅。&lt;br&gt;现在趁着有闲暇的精力，终于把这个一拖再拖的事情给实现，搭建过程总体是简单的，没有费多少力气，但是还是遇到了一些小问题，现在将遇到的问题记录下来。&lt;br&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://bodycoder101.github.io/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://bodycoder101.github.io/tags/hexo/"/>
    
      <category term="next" scheme="http://bodycoder101.github.io/tags/next/"/>
    
  </entry>
  
</feed>
